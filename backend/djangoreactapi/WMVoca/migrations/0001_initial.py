# Generated by Django 4.2 on 2023-05-17 13:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={"db_table": "auth_group", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[("id", models.BigAutoField(primary_key=True, serialize=False)),],
            options={"db_table": "auth_group_permissions", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={"db_table": "auth_permission", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={"db_table": "auth_user", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[("id", models.BigAutoField(primary_key=True, serialize=False)),],
            options={"db_table": "auth_user_groups", "managed": False,},
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[("id", models.BigAutoField(primary_key=True, serialize=False)),],
            options={"db_table": "auth_user_user_permissions", "managed": False,},
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={"db_table": "django_admin_log", "managed": False,},
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={"db_table": "django_content_type", "managed": False,},
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={"db_table": "django_migrations", "managed": False,},
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={"db_table": "django_session", "managed": False,},
        ),
        migrations.CreateModel(
            name="PostPost",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("sentence", models.TextField()),
                ("meaning", models.TextField()),
            ],
            options={"db_table": "post_post", "managed": False,},
        ),
        migrations.CreateModel(
            name="Scrapbook",
            fields=[
                ("scrapbook_id", models.AutoField(primary_key=True, serialize=False)),
                ("scrapbook_name", models.CharField(max_length=255)),
                ("scrapbook_info", models.TextField()),
                ("content_num", models.IntegerField()),
            ],
            options={"db_table": "SCRAPBOOK",},
        ),
        migrations.CreateModel(
            name="UserInfo",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("user_name", models.CharField(max_length=255)),
                ("user_email", models.EmailField(max_length=254)),
            ],
            options={"db_table": "USERINFO",},
        ),
        migrations.CreateModel(
            name="VocaInfo",
            fields=[
                ("voca_id", models.AutoField(primary_key=True, serialize=False)),
                ("voca_name", models.CharField(max_length=255)),
                ("voca_info", models.TextField()),
                ("word_num", models.IntegerField()),
                ("sentence_num", models.IntegerField()),
                (
                    "v_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WMVoca.userinfo",
                    ),
                ),
            ],
            options={"db_table": "VOCAINFO",},
        ),
        migrations.CreateModel(
            name="VocaSentence",
            fields=[
                ("sentence_id", models.AutoField(primary_key=True, serialize=False)),
                ("sentence", models.TextField()),
                ("s_meaning", models.TextField()),
                (
                    "s_voca_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WMVoca.vocainfo",
                    ),
                ),
            ],
            options={"db_table": "VOCASENTENCE",},
        ),
        migrations.CreateModel(
            name="VocaWord",
            fields=[
                ("word_id", models.AutoField(primary_key=True, serialize=False)),
                ("word", models.CharField(max_length=255)),
                ("w_meaning", models.TextField()),
                ("save_memory", models.BooleanField()),
                (
                    "w_sentence_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WMVoca.vocasentence",
                    ),
                ),
                (
                    "w_voca_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WMVoca.vocainfo",
                    ),
                ),
            ],
            options={"db_table": "VOCAWORD",},
        ),
        migrations.CreateModel(
            name="ScrapbookContent",
            fields=[
                ("content_id", models.AutoField(primary_key=True, serialize=False)),
                ("content", models.TextField()),
                ("c_meaning", models.TextField()),
                (
                    "c_scrapbook_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WMVoca.scrapbook",
                    ),
                ),
            ],
            options={"db_table": "SCRAPBOOKCONTENT",},
        ),
        migrations.AddField(
            model_name="scrapbook",
            name="sb_user_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="WMVoca.userinfo"
            ),
        ),
    ]
